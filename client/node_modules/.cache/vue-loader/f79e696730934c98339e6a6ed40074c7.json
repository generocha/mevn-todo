{"remainingRequest":"/Users/generocha/Documents/ITC134/new_mevn_todo/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/generocha/Documents/ITC134/new_mevn_todo/client/src/components/PostComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/generocha/Documents/ITC134/new_mevn_todo/client/src/components/PostComponent.vue","mtime":1575955041880},{"path":"/Users/generocha/Documents/ITC134/new_mevn_todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1575658168064},{"path":"/Users/generocha/Documents/ITC134/new_mevn_todo/client/node_modules/babel-loader/lib/index.js","mtime":1575658167867},{"path":"/Users/generocha/Documents/ITC134/new_mevn_todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1575658168064},{"path":"/Users/generocha/Documents/ITC134/new_mevn_todo/client/node_modules/vue-loader/lib/index.js","mtime":1575658174946}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0U2VyaXZjZSBmcm9tICcuLi9Qb3N0U2VydmljZScKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQb3N0Q29tcG9uZW50JywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IFtdLAogICAgICBlcnJvcjogJycsCiAgICAgIHRleHQ6ICcnCiAgICB9CiAgfSwKICBhc3luYyBjcmVhdGVkKCkgewogICAgdHJ5IHsKICAgICAgdGhpcy5wb3N0cyA9IGF3YWl0IFBvc3RTZXJpdmNlLmdldFBvc3RzKCk7CiAgICB9Y2F0Y2goZXJyKXsKICAgICAgdGhpcy5lcnJvciA9IGVyci5tZXNzYWdlOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgY3JlYXRlUG9zdCgpIHsKICAgICAgYXdhaXQgUG9zdFNlcml2Y2UuaW5zZXJ0UG9zdCh0aGlzLnRleHQpOwogICAgICB0aGlzLnBvc3RzID0gYXdhaXQgUG9zdFNlcml2Y2UuZ2V0UG9zdHMoKTsKICAgIH0sCiAgICBhc3luYyBkZWxldGVQb3N0KGlkKSB7CiAgICAgIGF3YWl0IFBvc3RTZXJpdmNlLmRlbGV0ZVBvc3QoaWQpOwogICAgICB0aGlzLnBvc3RzID0gYXdhaXQgUG9zdFNlcml2Y2UuZ2V0UG9zdHMoKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["PostComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Latest ToDo</h1>\n    <div class=\"create-post\">\n      <label for=\"create-post\"> Add a ToDo </label>\n      <input type=\"text\" id=\"create-post\" v-model=\"text\" placeholder=\"Create a todo\">\n      <button v-on:click=\"createPost\">Add</button>\n    </div>\n    <hr>\n    <p class=\"error\" v-if=\"error\">{{ error }}</p>\n    <div class=\"posts-container\">\n      <div class=\"post\"\n        v-for=\"(post, index) in posts\"\n        v-bind:item=\"post\"\n        v-bind:index=\"index\"\n        v-bind:key=\"post._id\"\n        v-on:dblclick=\"deletePost(post._id)\"\n      >\n      {{ `${post.createdAt.getMonth()}/${post.createdAt.getDate()}/${post.createdAt.getFullYear()}` }}\n      <p class=\"text\">{{ post.text }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostSerivce from '../PostService'\nexport default {\n  name: 'PostComponent',\n  data() {\n    return {\n      posts: [],\n      error: '',\n      text: ''\n    }\n  },\n  async created() {\n    try {\n      this.posts = await PostSerivce.getPosts();\n    }catch(err){\n      this.error = err.message;\n    }\n  },\n  methods: {\n    async createPost() {\n      await PostSerivce.insertPost(this.text);\n      this.posts = await PostSerivce.getPosts();\n    },\n    async deletePost(id) {\n      await PostSerivce.deletePost(id);\n      this.posts = await PostSerivce.getPosts();\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv.container { max-width: 800px; margin: 0 auto; }\n\np.error { border: 1px solid #ff5b5f; background-color: #ffc5c1; padding: 10px; margin-bottom: 15px; }\n\ndiv.post { position: relative; border: 1px solid #5bd658; background-color: 3bcffb8; padding: 10px 10px 30px 10px; margin-bottom: 15px; }\n\ndiv.created-at { position: absolute; top: 0; left: 0; padding: 5px 15px 5px 15px; background-color: darkgreen; }\n\np.text { font-size: 22px; font-weight: 700; margin-bottom: 0; }\n</style>\n"]}]}